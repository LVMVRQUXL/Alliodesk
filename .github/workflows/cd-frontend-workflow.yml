name: CD Frontend - Deploy
on:
  push:
    branches:
      - 'master'
    paths:
      - 'frontend/**'

env:
  FRONTEND_IMAGE_NAME: alliodesk-frontend
  FRONTEND_IMAGE_VERSION_LATEST: latest
  FRONTEND_MODULE_PATH: ./frontend
  HUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  HUB_PROJECT: ${{ secrets.HUB_PROJECT }}
  HUB_REGISTRY: ${{ secrets.HUB_REGISTRY }}
  HUB_USERNAME: ${{ secrets.HUB_USERNAME }}

jobs:
  # DEPLOY TO GITHUB PACKAGES
  deploy-github:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build a docker image of Frontend
        run: |
          version=`sed -nE 's/^\s*"version": "(.*?)",$/\1/p' $FRONTEND_MODULE_PATH/package.json`

          echo "Building docker image of $FRONTEND_IMAGE_NAME version $version..."
          docker build -t "$HUB_REGISTRY/$HUB_USERNAME/$HUB_PROJECT/$FRONTEND_IMAGE_NAME:$version" $FRONTEND_MODULE_PATH
          echo "SUCCESS\n"
      - name: Login to Github Packages
        run: docker login -u $HUB_USERNAME -p $HUB_PASSWORD $HUB_REGISTRY
      - name: Push to Github Packages
        run: |
          version=`sed -nE 's/^\s*"version": "(.*?)",$/\1/p' $FRONTEND_MODULE_PATH/package.json`

          echo "Pushing docker image of $FRONTEND_IMAGE_NAME version $version..."
          docker push "$HUB_REGISTRY/$HUB_USERNAME/$HUB_PROJECT/$FRONTEND_IMAGE_NAME:$version"
          echo "SUCCESS\n"

          echo "Pushing docker image of $FRONTEND_IMAGE_NAME version $FRONTEND_IMAGE_VERSION_LATEST..."
          docker tag "$HUB_REGISTRY/$HUB_USERNAME/$HUB_PROJECT/$FRONTEND_IMAGE_NAME:$version" \
                  "$HUB_REGISTRY/$HUB_USERNAME/$HUB_PROJECT/$FRONTEND_IMAGE_NAME:$FRONTEND_IMAGE_VERSION_LATEST"
          docker push "$HUB_REGISTRY/$HUB_USERNAME/$HUB_PROJECT/$FRONTEND_IMAGE_NAME:$FRONTEND_IMAGE_VERSION_LATEST"
          echo "SUCCESS\n"
      - name: Logout from Github Packages
        run: docker logout $HUB_REGISTRY
  # DEPLOY TO HEROKU REGISTRY
  deploy-heroku:
    runs-on: ubuntu-latest
    needs: deploy-github
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_APP_NAME_FRONT: ${{ secrets.HEROKU_APP_NAME_FRONT }}
      HEROKU_PROCESS_TYPE: web
      HEROKU_REGISTRY: ${{ secrets.HEROKU_REGISTRY }}
    steps:
      - uses: actions/checkout@v2
      - name: Login to Github Packages
        run: docker login $HUB_REGISTRY -u $HUB_USERNAME -p $HUB_PASSWORD
      - name: Docker pull latest image from Github Packages
        run: |
          echo "Pulling docker image $FRONTEND_IMAGE_NAME:$FRONTEND_IMAGE_VERSION_LATEST from Github Packages..."
          docker pull "$HUB_REGISTRY/$HUB_USERNAME/$HUB_PROJECT/$FRONTEND_IMAGE_NAME:$FRONTEND_IMAGE_VERSION_LATEST"
          echo "SUCCESS\n"
      - name: Logout from Github Packages
        run: docker logout $HUB_REGISTRY
      - name: Login to Heroku Registry
        run: docker login -u _ -p $HEROKU_API_KEY $HEROKU_REGISTRY
      - name: Tag pulled image of Frontend
        run: |
          echo "Building docker image of $HEROKU_PROCESS_TYPE..."
          docker tag "$HUB_REGISTRY/$HUB_USERNAME/$HUB_PROJECT/$FRONTEND_IMAGE_NAME:$FRONTEND_IMAGE_VERSION_LATEST" \
                  "$HEROKU_REGISTRY/$HEROKU_APP_NAME_FRONT/$HEROKU_PROCESS_TYPE"
          echo "SUCCESS\n"
      - name: Push an image to Heroku
        run: |
          echo "Pushing docker image of $HEROKU_PROCESS_TYPE..."
          docker push "$HEROKU_REGISTRY/$HEROKU_APP_NAME_FRONT/$HEROKU_PROCESS_TYPE"
          echo "SUCCESS\n"
      - name: Logout from Heroku Registry
        run: docker logout $HEROKU_REGISTRY
  # TAG THE RELEASE ON GITHUB
  tag-release:
    runs-on: ubuntu-latest
    needs: deploy-github
    env:
      GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
      GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
    steps:
      - uses: actions/checkout@v2
      - name: Set identity
        run: |
          git config user.email "$GIT_USER_EMAIL"
          git config user.name "$GIT_USER_NAME"
      - name: Create tag
        run: |
          version=`sed -nE 's/^\s*"version": "(.*?)",$/\1/p' $FRONTEND_MODULE_PATH/package.json`

          echo "Creating tag for Frontend version $version..."
          git tag -a "frontend-$version" -m "Release Frontend version $version"
          echo "SUCCESS\n"
      - name: Push tag to Github
        run: git push --tags origin
